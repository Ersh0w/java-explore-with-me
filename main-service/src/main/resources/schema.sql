DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS participation_requests CASCADE;
DROP TABLE IF EXISTS compilation_events_relation CASCADE;
DROP TABLE IF EXISTS event_admin_comments CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(250)                            NOT NULL,
    email VARCHAR(254)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT unique_user_email UNIQUE (email),
    CONSTRAINT unique_user_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT unique_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT                                   NOT NULL,
    lon FLOAT                                   NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id),
    CONSTRAINT unique_lat_and_lon UNIQUE (lat, lon)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title  VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR(2000)                           NOT NULL,
    category_id        BIGINT,
    confirmed_requests BIGINT,
    created_date       TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    description        VARCHAR(7000)                           NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    initiator_id       BIGINT,
    location_id        BIGINT,
    paid               BOOLEAN                                 NOT NULL,
    participant_limit  BIGINT                                  NOT NULL,
    published_date     TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN                                 NOT NULL,
    state              VARCHAR(9)                              NOT NULL,
    title              VARCHAR(120)                            NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT id_initiator_event_fk FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE NO ACTION,
    CONSTRAINT id_category_event_fk FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE NO ACTION,
    CONSTRAINT id_location_event_fk FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS participation_requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event_id     BIGINT,
    requester_id BIGINT,
    status       VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_participation_request PRIMARY KEY (id),
    CONSTRAINT id_event_request_fk FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT id_requester_request_fk FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilation_events_relation
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    compilation_id BIGINT,
    event_id       BIGINT,
    CONSTRAINT pk_compilation_event PRIMARY KEY (id),
    CONSTRAINT id_compilation_comp_event_fk FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    CONSTRAINT id_event_comp_event_fk FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_admin_comments
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    description VARCHAR(2000)                             NOT NULL,
    event_id       BIGINT,
    CONSTRAINT pk_event_admin_comment PRIMARY KEY (id),
    CONSTRAINT id_event_admin_comments_fk FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);